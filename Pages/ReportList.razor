@page "/rptList"
@*@page "/rptList/{RptType}/{PartyId:int}"*@
@inject SfDialogService sfDialogService
@inject NavigationManager navigationManager
@inject IJSRuntime JsRuntime
@inject MyStateContainer myStateContainer

@using System.ComponentModel;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Rendering;
@using Newtonsoft.Json
@using Syncfusion.Blazor.DropDowns;
@using Syncfusion.Blazor.Inputs;
@using Syncfusion.Blazor.Popups
@using System.Data;
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Lists
@using Syncfusion.Blazor.Spinner
@using JSCoreLibRazor

@*<h3>RptType : @RptType</h3>*@
@*<html>
    <head>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    </head>
    <body>
        <header>
		<nav class="navbar navbar-light px-2 fixed-top" style="background-color: lightskyblue">
            <div class="container-fluid">
                    <a class="navbar-brand" href="#">
                    <img src="/Images/jupiter.png" alt="" width="30" height="30" class="d-inline-block align-text-top">
                    Reports
                    </a>
					<button type="submit" class="btn" style="border:none;background-color: lightskyblue" @onclick="@(e => OnButtonClick("close"))">
						<img src="/Images/close.png" alt="Bootstrap" class="navbar-nav ms-auto mb-2 mb-lg-0 fs-2" width="25" height="25" >
					</button>
					
			</div>
            </nav>

            <div class="table-responsive " style="margin-top:70px">
                <SfSpinner @bind-Visible="@VisibleProperty">

                </SfSpinner>
				<SfListView DataSource="@RptList" >
				    <ListViewFieldSettings TValue="ReportDet" Text="ReportName" Id="ReportId"></ListViewFieldSettings>
                    <ListViewEvents TValue="ReportDet" Clicked="RptListView_ItemSelected" />
                </SfListView>
            </div>
    </header>
    </body>
</html>*@

<div id="page" class="page">
    <!-- Header : start -->
    <header class="header">
        <div class="site-brand">
        <img src="/Images/logo.png" />
        </div>

        <div class="header-title">
        <h1>Reports</h1>
        </div>

        <div class="header-icons">
            @if (Global.lDashChart)
            {
                <a class="icon" onclick="@BackData">
                    <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M28.7712 17.4547L21.2759 10.3794L21.2609 10.3653C20.9165 10.0501 20.4665 9.87525 19.9995 9.87525C19.5326 9.87525 19.0826 10.0501 18.7381 10.3653L18.7222 10.3794L11.2287 17.4547C11.0387 17.6305 10.887 17.8436 10.7831 18.0808C10.6792 18.3179 10.6254 18.5739 10.625 18.8328V27.5C10.625 27.9973 10.8225 28.4742 11.1742 28.8258C11.5258 29.1775 12.0027 29.375 12.5 29.375H17C17.4973 29.375 17.9742 29.1775 18.3258 28.8258C18.6775 28.4742 18.875 27.9973 18.875 27.5V23.375H21.125V27.5C21.125 27.9973 21.3225 28.4742 21.6742 28.8258C22.0258 29.1775 22.5027 29.375 23 29.375H27.5C27.9973 29.375 28.4742 29.1775 28.8258 28.8258C29.1775 28.4742 29.375 27.9973 29.375 27.5V18.8328C29.3746 18.5739 29.3208 18.3179 29.2169 18.0808C29.113 17.8436 28.9613 17.6305 28.7712 17.4547ZM27.125 27.125H23.375V23C23.375 22.7538 23.3265 22.51 23.2323 22.2825C23.138 22.055 22.9999 21.8483 22.8258 21.6742C22.6517 21.5001 22.445 21.362 22.2175 21.2677C21.99 21.1735 21.7462 21.125 21.5 21.125H18.5C18.0027 21.125 17.5258 21.3225 17.1742 21.6742C16.8225 22.0258 16.625 22.5027 16.625 23V27.125H12.875V18.995L20 12.2684L27.125 18.995V27.125Z" fill="white" /></svg>
                </a>
            }
            else
            {
                <a class="icon" href="#" data-bs-toggle="modal" data-bs-target="#exampleModal">
                    <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M27.1934 12.8609C25.7792 11.4377 23.9743 10.4664 22.0074 10.0701C20.0405 9.67392 18.0003 9.8706 16.1453 10.6353C14.2903 11.3999 12.7042 12.6981 11.5879 14.3653C10.4716 16.0325 9.87543 17.9936 9.875 20V25.25C9.875 25.9462 10.1516 26.6139 10.6438 27.1062C11.1361 27.5984 11.8038 27.875 12.5 27.875H14C14.6962 27.875 15.3639 27.5984 15.8562 27.1062C16.3484 26.6139 16.625 25.9462 16.625 25.25V21.5C16.625 20.8038 16.3484 20.1361 15.8562 19.6438C15.3639 19.1516 14.6962 18.875 14 18.875H12.2038C12.4753 17.0008 13.4126 15.2871 14.8443 14.0475C16.276 12.808 18.1063 12.1255 20 12.125H20.06C21.9453 12.1331 23.7647 12.8197 25.1853 14.0592C26.6059 15.2986 27.5327 17.0082 27.7963 18.875H26C25.3038 18.875 24.6361 19.1516 24.1438 19.6438C23.6516 20.1361 23.375 20.8038 23.375 21.5V25.25C23.375 25.9462 23.6516 26.6139 24.1438 27.1062C24.6361 27.5984 25.3038 27.875 26 27.875H27.8375C27.7511 28.2985 27.5209 28.6791 27.1861 28.9525C26.8512 29.2258 26.4322 29.3751 26 29.375H20.75C20.4516 29.375 20.1655 29.4935 19.9545 29.7045C19.7435 29.9155 19.625 30.2016 19.625 30.5C19.625 30.7984 19.7435 31.0845 19.9545 31.2955C20.1655 31.5065 20.4516 31.625 20.75 31.625H26C27.0936 31.6238 28.1421 31.1888 28.9154 30.4154C29.6888 29.6421 30.1238 28.5936 30.125 27.5V20C30.1302 18.6757 29.8739 17.3633 29.3708 16.1383C28.8677 14.9132 28.1278 13.7995 27.1934 12.8609ZM14 21.125C14.0995 21.125 14.1948 21.1645 14.2652 21.2348C14.3355 21.3052 14.375 21.4005 14.375 21.5V25.25C14.375 25.3495 14.3355 25.4448 14.2652 25.5152C14.1948 25.5855 14.0995 25.625 14 25.625H12.5C12.4005 25.625 12.3052 25.5855 12.2348 25.5152C12.1645 25.4448 12.125 25.3495 12.125 25.25V21.125H14ZM25.625 25.25V21.5C25.625 21.4005 25.6645 21.3052 25.7348 21.2348C25.8052 21.1645 25.9005 21.125 26 21.125H27.875V25.625H26C25.9005 25.625 25.8052 25.5855 25.7348 25.5152C25.6645 25.4448 25.625 25.3495 25.625 25.25Z" fill="white" /></svg>
                </a>
                <a class="icon" onclick="@OnClickSettings">
                    <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M20 15.125C19.0358 15.125 18.0933 15.4109 17.2916 15.9466C16.4899 16.4823 15.8651 17.2436 15.4961 18.1344C15.1271 19.0252 15.0306 20.0054 15.2187 20.9511C15.4068 21.8967 15.8711 22.7654 16.5529 23.4471C17.2346 24.1289 18.1033 24.5932 19.0489 24.7813C19.9946 24.9694 20.9748 24.8729 21.8656 24.5039C22.7564 24.1349 23.5177 23.5101 24.0534 22.7084C24.5891 21.9067 24.875 20.9642 24.875 20C24.8735 18.7075 24.3594 17.4684 23.4455 16.5545C22.5316 15.6406 21.2925 15.1265 20 15.125ZM20 22.625C19.4808 22.625 18.9733 22.471 18.5416 22.1826C18.1099 21.8942 17.7735 21.4842 17.5748 21.0045C17.3761 20.5249 17.3242 19.9971 17.4254 19.4879C17.5267 18.9787 17.7767 18.511 18.1438 18.1438C18.511 17.7767 18.9787 17.5267 19.4879 17.4254C19.9971 17.3241 20.5249 17.3761 21.0045 17.5748C21.4842 17.7735 21.8942 18.1099 22.1826 18.5416C22.471 18.9733 22.625 19.4808 22.625 20C22.625 20.6962 22.3484 21.3639 21.8562 21.8562C21.3639 22.3484 20.6962 22.625 20 22.625ZM28.625 20.0741V19.9259L29.9375 18.2844C30.0477 18.1468 30.124 17.9853 30.1603 17.8129C30.1966 17.6404 30.1919 17.4619 30.1466 17.2916C29.9097 16.3982 29.5557 15.5401 29.0938 14.7397C29.0048 14.587 28.8811 14.4575 28.7327 14.3616C28.5843 14.2656 28.4154 14.206 28.2397 14.1875L26.1509 13.9531L26.0469 13.8491L25.8125 11.7594C25.7939 11.5838 25.7342 11.4151 25.6382 11.2669C25.5423 11.1187 25.4128 10.9951 25.2603 10.9062C24.4598 10.4428 23.6014 10.0875 22.7075 9.84968C22.5371 9.805 22.3585 9.80098 22.1862 9.83795C22.0139 9.87491 21.8527 9.95183 21.7156 10.0625L20.0741 11.375H19.9259L18.2844 10.0625C18.1468 9.95232 17.9853 9.876 17.8129 9.83969C17.6404 9.80338 17.4619 9.80808 17.2916 9.85343C16.398 10.0918 15.5399 10.4473 14.7397 10.9109C14.5876 10.9995 14.4585 11.1224 14.3626 11.2699C14.2667 11.4175 14.2067 11.5854 14.1875 11.7603L13.9531 13.8491L13.8491 13.9531L11.7594 14.1875C11.5838 14.2061 11.4151 14.2658 11.2669 14.3618C11.1187 14.4577 10.9952 14.5872 10.9063 14.7397C10.4441 15.5404 10.0901 16.3988 9.85344 17.2925C9.80824 17.4627 9.80362 17.641 9.83993 17.8133C9.87624 17.9856 9.95247 18.1469 10.0625 18.2844L11.375 19.9259V20.0741L10.0625 21.7156C9.95233 21.8532 9.87601 22.0147 9.83969 22.1871C9.80338 22.3596 9.80809 22.5381 9.85344 22.7084C10.0921 23.6021 10.448 24.4601 10.9119 25.2603C11.0003 25.4122 11.1231 25.5413 11.2705 25.6372C11.4178 25.7331 11.5856 25.7931 11.7603 25.8125L13.8491 26.045L13.9531 26.1491L14.1875 28.2406C14.2061 28.4162 14.2658 28.5849 14.3618 28.7331C14.4577 28.8813 14.5872 29.0048 14.7397 29.0937C15.5402 29.5572 16.3986 29.9124 17.2925 30.1503C17.4629 30.195 17.6415 30.199 17.8138 30.162C17.9861 30.1251 18.1473 30.0482 18.2844 29.9375L19.9259 28.625H20.0741L21.7156 29.9375C21.8532 30.0477 22.0147 30.124 22.1871 30.1603C22.3596 30.1966 22.5381 30.1919 22.7084 30.1466C23.6018 29.9097 24.4598 29.5557 25.2603 29.0937C25.4127 29.0054 25.5422 28.8826 25.6385 28.735C25.7347 28.5875 25.795 28.4194 25.8144 28.2444L26.0469 26.1556L26.1509 26.0516L28.2406 25.8125C28.4157 25.7931 28.5838 25.7328 28.7313 25.6366C28.8788 25.5404 29.0017 25.4108 29.09 25.2584C29.5534 24.4579 29.9087 23.5995 30.1466 22.7056C30.1914 22.5357 30.1959 22.3577 30.1596 22.1858C30.1233 22.0139 30.0472 21.8528 29.9375 21.7156L28.625 20.0741ZM26.3638 19.6156C26.3788 19.8717 26.3788 20.1283 26.3638 20.3844C26.347 20.6627 26.4342 20.9373 26.6084 21.155L27.8122 22.6597C27.6986 22.996 27.563 23.3246 27.4063 23.6431L25.4909 23.8559C25.2136 23.8876 24.958 24.0213 24.7738 24.2309C24.6034 24.4228 24.4219 24.6044 24.23 24.7747C24.0204 24.959 23.8867 25.2146 23.855 25.4919L23.6431 27.4062C23.3246 27.5636 22.9961 27.6998 22.6597 27.8141L21.155 26.6094C20.9553 26.45 20.7073 26.3634 20.4519 26.3637C20.4294 26.3637 20.4069 26.3637 20.3844 26.3637C20.1283 26.3787 19.8717 26.3787 19.6156 26.3637C19.3375 26.3473 19.0631 26.4341 18.845 26.6075L17.3403 27.8122C17.004 27.6986 16.6754 27.5629 16.3569 27.4062L16.1441 25.4909C16.1124 25.2136 15.9787 24.958 15.7691 24.7737C15.5772 24.6034 15.3956 24.4219 15.2253 24.23C15.041 24.0204 14.7854 23.8867 14.5081 23.855L12.5938 23.6431C12.4364 23.3246 12.3002 22.9961 12.1859 22.6597L13.3897 21.155C13.5639 20.9373 13.6511 20.6627 13.6344 20.3844C13.6194 20.1283 13.6194 19.8717 13.6344 19.6156C13.6511 19.3373 13.5639 19.0627 13.3897 18.845L12.1878 17.3403C12.3014 17.004 12.437 16.6754 12.5938 16.3569L14.5091 16.1441C14.7864 16.1124 15.042 15.9787 15.2263 15.7691C15.3966 15.5772 15.5781 15.3956 15.77 15.2253C15.9796 15.041 16.1133 14.7854 16.145 14.5081L16.3569 12.5937C16.6754 12.4364 17.0039 12.3002 17.3403 12.1859L18.845 13.3906C19.0631 13.564 19.3375 13.6509 19.6156 13.6344C19.8717 13.6194 20.1283 13.6194 20.3844 13.6344C20.6626 13.6514 20.9372 13.5645 21.155 13.3906L22.6597 12.1859C22.9961 12.3002 23.3246 12.4364 23.6431 12.5937L23.8559 14.5091C23.8876 14.7864 24.0213 15.042 24.2309 15.2262C24.4228 15.3966 24.6044 15.5781 24.7747 15.77C24.959 15.9796 25.2146 16.1133 25.4919 16.145L27.4063 16.3569C27.5636 16.6754 27.6998 17.0039 27.8141 17.3403L26.6103 18.845C26.4354 19.0624 26.3475 19.3371 26.3638 19.6156Z" fill="white" /></svg>
                </a>
            }
            <a class="icon" href="#" data-bs-toggle="modal" data-bs-target="#exampleModalOne">
                 <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M18.875 20V12.5C18.875 12.2016 18.9935 11.9155 19.2045 11.7045C19.4155 11.4935 19.7016 11.375 20 11.375C20.2984 11.375 20.5845 11.4935 20.7955 11.7045C21.0065 11.9155 21.125 12.2016 21.125 12.5V20C21.125 20.2984 21.0065 20.5845 20.7955 20.7955C20.5845 21.0065 20.2984 21.125 20 21.125C19.7016 21.125 19.4155 21.0065 19.2045 20.7955C18.9935 20.5845 18.875 20.2984 18.875 20ZM25.1141 12.3125C24.8643 12.1587 24.5642 12.1085 24.278 12.1727C23.9917 12.2369 23.7419 12.4104 23.5817 12.6562C23.4215 12.902 23.3637 13.2006 23.4205 13.4884C23.4774 13.7762 23.6444 14.0304 23.8859 14.1969C25.9447 15.5347 27.125 17.6562 27.125 20C27.125 21.8897 26.3743 23.7019 25.0381 25.0381C23.7019 26.3743 21.8897 27.125 20 27.125C18.1103 27.125 16.2981 26.3743 14.9619 25.0381C13.6257 23.7019 12.875 21.8897 12.875 20C12.875 17.6562 14.0553 15.5347 16.1141 14.1922C16.3428 14.0208 16.4977 13.7687 16.5473 13.4872C16.5969 13.2057 16.5375 12.9159 16.3812 12.6766C16.2248 12.4373 15.9833 12.2665 15.7055 12.1989C15.4278 12.1313 15.1348 12.1719 14.8859 12.3125C12.1775 14.0731 10.625 16.8772 10.625 20C10.625 22.4864 11.6127 24.871 13.3709 26.6291C15.129 28.3873 17.5136 29.375 20 29.375C22.4864 29.375 24.871 28.3873 26.6291 26.6291C28.3873 24.871 29.375 22.4864 29.375 20C29.375 16.8772 27.8225 14.0731 25.1141 12.3125Z" fill="white" /></svg>
            </a>
        </div>
    </header>
    <!-- Header : end -->

    <!-- Content : start -->
    <section class="section content px-2">
        <form id="" class="search-report-form d-flex flex-column mb-3">
            @* <input type="text" id="" class="form-control report-search-field" placeholder="Search report...">  *@
            @* <SfTextBox id="" class="form-control report-search-field" Input="@OnInput" Placeholder="Search report..."></SfTextBox> *@
        </form>
        <div class="reports d-flex flex-column gap-1">
            <div class="report">
                <SfSpinner @bind-Visible="@VisibleProperty" Label="Loading...." Type="@SpinnerType.Material">
                </SfSpinner>
                <SfListView DataSource="@RptList" class="report">
                    <ListViewFieldSettings TValue="ReportDet" Text="ReportName" Id="ReportId" GroupBy="Business"></ListViewFieldSettings>
                    <ListViewEvents TValue="ReportDet" Clicked="RptListView_ItemSelected" />
                </SfListView>
            </div>
        </div>
    </section>
    <!-- Content : end -->
    <!-- Modal1 : start -->
    <HelpDesk></HelpDesk>
    <!-- Modal1 : end -->
    <!-- Modal2 : start -->
    <ExitModal></ExitModal>
    <!-- Modal2 : end -->
</div>

@code {
    [Parameter]
    public string RptType { get; set; }

    [Parameter]
    public int PartyId { get; set; }

    private bool VisibleProperty {get;set; }= false;
    List<ReportDet> RptList;
    ReportDet reportDet = new ReportDet();
    private DSRptDevDet DSRptDevDet;
    public DataTable? dataTbl = new DataTable();
    List<ReportDet> ListData = new List<ReportDet>();

    protected override async Task OnInitializedAsync()
    {
        VisibleProperty = true;
        DSRptDevDet = myStateContainer.Value;
        ShowReportList();
        VisibleProperty = false;
    }
    public void BackData()
    {
        navigationManager.NavigateTo("/dashpgnew");
    }
    public void OnClickSettings()
    {
        navigationManager.NavigateTo("/profilepg");
    }
    // public void OnInput(InputEventArgs eventArgs)
    // {
    //     ListData = RptList.FindAll(e => e.ReportName.ToLower().StartsWith(eventArgs.Value));
    // }

    private async void ShowReportList()
    {
        try
        {
            DSRptDevDet DSRptDevDet1 = new DSRptDevDet
		    {
			    AppType = DSRptDevDet.AppType,//AppType = "DREAMSMART",
			    DeviceId = DSRptDevDet.DeviceId,//DeviceId = "8780178336",
			    ApprType = DSRptDevDet.ApprType,//RptType,
                MainConnStr = Global.MainDBConnStr,
                SQLConnStr = Global.PtyDBConnstr
            };

            string json = JsonConvert.SerializeObject(DSRptDevDet1);
            var response = await RazorFunc.CallAPIAsync(Global.APIURL, "GetReportList", json);
            var respStatusCode = response.StatusCode;
            if (respStatusCode.ToString() == "OK")
            {
                var responseBody = await response.Content.ReadAsStringAsync();
                var retJSON = JsonConvert.DeserializeObject<RetJSON>(responseBody);

                if (retJSON.Status.ToString() == "Error")
                {
                    await sfDialogService.AlertAsync(retJSON.Msg.ToString() + retJSON.ExError, Global.SfDialogMsg);
                }
                else
                {
                    DataTable Dt = JsonConvert.DeserializeObject<DataTable>(retJSON.Data.ToString().Trim());
                    RptList = new List<ReportDet>();
                    for (int iCtr = 0; iCtr < Dt.Rows.Count; iCtr++)
                    {
                        System.Data.DataRow row = Dt.Rows[iCtr];

                        RptList.Add(new ReportDet()
                        {
                            ReportId = int.Parse(row["ReportId"].ToString()),
                            ReportName = row["ReportName"].ToString().Trim(),
                            Chart = row["Chart"].ToString().Trim(),
                            XAxis = row["XAxis"].ToString().Trim(),
                            YAxis1 = row["YAxis1"].ToString().Trim(),
                            YAxis2 = row["YAxis2"].ToString().Trim(),
                            MultiFirm = row["MultiFirm"].ToString().Trim(),
                            CompDB = row["CompDB"].ToString().Trim(),
                            YrSel = row["YrSel"].ToString().Trim(),
                            MainDB = row["YrDB"].ToString().Trim(),
                            Business = row["Business"].ToString().Trim()
                        });

                    }
                    ListData = RptList;
                }

            }
            StateHasChanged();
        }
        catch (Exception ex)
        {
            await sfDialogService.AlertAsync("ShowDashBordData => " + ex.Message, CoreVars.EXERROR);
        }
    }

    public void RptListView_ItemSelected(ClickEventArgs<ReportDet> args)
    {
        reportDet.ReportName = args.ItemData.ReportName;
        reportDet.ReportId = args.ItemData.ReportId;
        reportDet.Chart = args.ItemData.Chart;
        reportDet.MultiFirm = args.ItemData.MultiFirm;
        reportDet.XAxis = args.ItemData.XAxis;
        reportDet.YAxis1 = args.ItemData.YAxis1;
        reportDet.YAxis2 = args.ItemData.YAxis2;
        reportDet.CompDB = args.ItemData.CompDB;
        reportDet.YrSel = args.ItemData.YrSel;
        reportDet.PartyId = DSRptDevDet.PartyId;

        DSRptDevDet.ReportId = reportDet.ReportId;
        DSRptDevDet.RptName = args.ItemData.ReportName;
        DSRptDevDet.Chart = args.ItemData.Chart;
        DSRptDevDet.MultiFirm = args.ItemData.MultiFirm;
        DSRptDevDet.XAxis = args.ItemData.XAxis;
        DSRptDevDet.YAxis1 = args.ItemData.YAxis1;
        DSRptDevDet.YAxis2 = args.ItemData.YAxis2;
        DSRptDevDet.CompDB = args.ItemData.CompDB;
        DSRptDevDet.YrSel = args.ItemData.YrSel;
        
        DSRptDevDet.MainDB = args.ItemData.MainDB.Trim();
        //DSRptDevDet.YearId = args.ItemData.YearId.Trim();

        myStateContainer.SetValue(DSRptDevDet);
		navigationManager.NavigateTo("rptcriteria/");
		//navigationManager.NavigateTo("rptcriteria/"+reportDet.ReportId);
		//navigationManager.NavigateTo($"rptcriteria/{reportDet.ReportId}/{RptType}/{PartyId}/{reportDet.ReportName}");

	}
}
